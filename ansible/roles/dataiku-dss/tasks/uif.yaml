---
- name: "[UIF] - Add groups"
  become: true
  ansible.builtin.group:
    name: "{{ item }}"
  loop: "{{ dss_uif_groups }}"

- name: "[UIF] - Create users"
  ansible.builtin.include_tasks: "uif_add_users.yaml"
  loop: "{{ dss_users }}"

- name: "[UIF] - Read users.json"
  ansible.builtin.include_tasks: "uif_read_users_json.yaml"

- name: "[UIF] - Set group 'example_team' fact"
  ansible.builtin.set_fact:
    users_json_example_team: "{{ dss_config_users_json | json_query(query) }}"
  vars:
    query: "groups[?name=='example_team']"

- name: "[UIF] - Add group 'example_team' to users.json fact"
  ansible.builtin.set_fact:
    dss_config_users_json: >-
      {%- set _ = dss_config_users_json.groups.append(dss_group_example_team) -%}
      {{ dss_config_users_json }}
  when: users_json_example_team | length == 0

# Place final users.json

- name: "[UIF] - Place users.json"
  become: true
  become_user: "{{ dss_service_username }}"
  ansible.builtin.copy:
    dest: "{{ dss_config_users_json_path }}"
    backup: true
    content: "{{ dss_config_users_json | to_nice_json }}"
    mode: 0600
  notify: restart_dss

- name: "[UIF] - Check if impersonation is installed"
  become: true
  become_user: "{{ dss_service_username }}"
  ansible.builtin.stat:
    path: "{{ dss_data_dir }}/IMPERSONATION-INSTALLED"
  register: impersonation_installed

- name: "[UIF] - Stop DSS"
  become: true
  ansible.builtin.service:
    name: "{{ dss_systemd_service_name }}"
    state: stopped
  when: impersonation_installed.stat.islnk is not defined

- name: "[UIF] - Run 'install impersonation'"
  become: true
  ansible.builtin.shell:
    cmd: >-
      {{ dss_dssadmin_path }} install-impersonation {{ dss_service_username }}
      &&
      touch {{ dss_data_dir }}/IMPERSONATION-INSTALLED
    creates: "{{ dss_data_dir }}/IMPERSONATION-INSTALLED"
  notify: restart_dss

- name: "[UIF] - Find security-config.ini"
  become: true
  ansible.builtin.find:
    paths: "{{ dss_security_config_dir }}"
    patterns: "*.ini"
    recurse: true
  register: find_security_config_ini

- name: "[UIF] - Place security-config.ini"
  become: true
  ansible.builtin.template:
    src: security-config.ini.j2
    dest: "{{ find_security_config_ini.files[0].path }}"
    mode: 0600
  notify: restart_dss
