---
- name: "[GKE] - Install packages"
  become: true
  ansible.builtin.yum:
    name: "{{ dss_gke_req_packages }}"
    state: installed

# I need a quick way to get kubeconfig in the correct location...
- name: "[GKE] - Get kubeconfig for our cluster"
  become: true
  become_user: "{{ dss_service_username }}"
  ansible.builtin.command:
    cmd: |
      gcloud container clusters
      get-credentials {{ dss_gke_cluster_name }}
      --zone {{ dss_gcp_zone }}
    creates: "{{ dss_config_sa_kube_config_path }}"

- name: "[GKE] - Read current 'general-settings' configuration"
  no_log: true
  become: true
  become_user: "{{ dss_service_username }}"
  ansible.builtin.slurp:
    path: "{{ dss_config_general_settings_json_path }}"
  register: dss_config_general_settings_json_raw

- name: "[GKE] - Set 'general-settings' fact"
  ansible.builtin.set_fact:
    dss_general_settings_json: "{{ dss_config_general_settings_json_raw.content | b64decode | from_json }}"
    dss_general_settings_container_settings:
      containerSettings:
        executionConfigs:
          - name: DSS-GKE
            type: KUBERNETES
            properties: []
            usableBy: ALL
            allowedGroups: []
            dockerNetwork: host
            dockerResources: []
            kubernetesNamespace: "{{ dss_k8s_namespace_template }}"
            kubernetesResources:
              memRequestMB: -1
              memLimitMB: -1
              cpuRequest: -1
              cpuLimit: -1
              customLimits: []
              customRequests: []
            hostPathVolumes: []
            isFinal: false
            ensureNamespaceCompliance: true
            createNamespace: true
            baseImageType: EXEC
            repositoryURL: "{{ dss_container_image_registry_url }}"
            prePushMode: NONE
            dockerTLSVerify: false
        defaultWebappsK8SExposition:
          type: port_forward
          params: {}
        executionConfigsGenericOverrides:
          properties: []
          usableBy: ALL
          allowedGroups: []
          dockerNetwork: host
          dockerResources: []
          kubernetesResources:
            memRequestMB: -1
            memLimitMB: -1
            cpuRequest: -1
            cpuLimit: -1
            customLimits: []
            customRequests: []
          hostPathVolumes: []
          isFinal: false
          ensureNamespaceCompliance: false
          createNamespace: false
          baseImageType: EXEC
          prePushMode: NONE
          dockerTLSVerify: false
    dss_general_settings_spark_kubernetes_settings:
      managedKubernetes: true
      managedNamespace: "{{ dss_k8s_namespace_template }}"
      authenticationMode: DYNAMIC_SERVICE_ACCOUNT
      ensureNamespaceCompliance: true
      createNamespace: true
      baseImageType: SPARK
      repositoryURL: "{{ dss_container_image_registry_url }}"
      prePushMode: NONE
      dockerTLSVerify: false

- name: "[GKE] - Merge facts"
  ansible.builtin.set_fact:
    dss_config_merged_general_settings_json: "{{ dss_general_settings_json | combine (dss_general_settings_container_settings, recursive=true) }}"

- name: "[GKE] - Set Spark facts"
  ansible.builtin.set_fact:
    dss_config_merged_general_settings_json: >-
      {%- set _ = dss_config_merged_general_settings_json.sparkSettings.executionConfigs.0.__setitem__("kubernetesSettings", dss_general_settings_spark_kubernetes_settings) -%}
      {{ dss_config_merged_general_settings_json }}

- name: "[GKE] - Place 'general-settings.json'"
  become: true
  become_user: "{{ dss_service_username }}"
  ansible.builtin.copy:
    dest: "{{ dss_config_general_settings_json_path }}"
    backup: true
    content: "{{ dss_config_merged_general_settings_json | to_nice_json }}"
    mode: 0600

- name: "[GKE] - Set target host"
  become: true
  become_user: "{{ dss_service_username }}"
  ansible.builtin.lineinfile:
    path: "{{ dss_env_site_path }}"
    line: "export DKU_BACKEND_EXT_HOST={{ dss_internal_ip }}"
    regexp: '^export DKU_BACKEND_EXT_HOST='

# !TODO: Fix these `changed_when`, we should be able to check using the command output or similar...
- name: "[GKE] - Build 'container-exec' base image"
  become: true
  become_user: "{{ dss_service_username }}"
  changed_when: false
  ansible.builtin.command:
    cmd: >-
      {{ dss_dssadmin_path }} build-base-image
      --type container-exec

- name: "[GKE] - Build 'spark' base image"
  become: true
  become_user: "{{ dss_service_username }}"
  changed_when: false
  ansible.builtin.command:
    cmd: >-
      {{ dss_dssadmin_path }} build-base-image
      --type spark
