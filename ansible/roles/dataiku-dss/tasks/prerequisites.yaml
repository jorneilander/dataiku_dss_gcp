---
- name: "[Prerequisites] - Disable SELinux"
  become: true
  selinux:
    state: disabled
  notify:
    - "restart_host"

- name: "[Prerequisites] - Increase system limits"
  become: true
  pam_limits:
    domain: "{{ dss_service_username }}"
    limit_item: "{{ item }}"
    limit_type: "-"
    value: 65536
  loop:
    - nofile
    - nproc

- name: "[Prerequisites] - Update all packages"
  become: true
  ansible.builtin.yum:
    name: "*"
    state: latest
    update_cache: true

- name: "[Prerequisites] - Install EPEL"
  become: true
  ansible.builtin.yum:
    name: "epel-release"

- name: "Prerequisites - Enable Powertools for R"
  become: true
  changed_when: false
  ansible.builtin.shell:
    cmd: >-
      yum config-manager --enable powertools &&
      yum config-manager --enable powertools-source

- name: "[Prerequisites] - Set package list"
  ansible.builtin.set_fact:
    dss_package_list: >-
      {{ dss_req_generic_packages
          + (dss_anaconda_req_packages if dss_support_anaconda else [])
          + (dss_r_req_packages if dss_support_r else [])
          + dss_yum_additional_packages }}

- name: "[Prerequisites] - Install required packages"
  become: true
  ansible.builtin.yum:
    name: "{{ dss_package_list }}"
    state: present
    update_cache: true

# User stuff

- name: "[Prerequisites] - Create '{{ dss_service_username }}' user"
  become: true
  ansible.builtin.user:
    name: "{{ dss_service_username }}"
    state: present

- name: "[Prerequisites] - Format DSS Data filesystem"
  become: true
  community.general.filesystem:
    dev: "{{ dss_data_dir_disk }}"
    fstype: "{{ dss_fs_data_type }}"

- name: "[Prerequisites] - Mount DSS Data filesystem"
  become: true
  ansible.posix.mount:
    fstype: "{{ dss_fs_data_type }}"
    path: "{{ dss_fs_data_mount_path }}"
    src: "{{ dss_data_dir_disk }}"
    opts: "defaults,acl"
    state: mounted

- name: "[Prerequisites] - Create public directories"
  become: true
  ansible.builtin.file:
    path: "{{ dss_install_target_dir }}"
    state: directory
    owner: "{{ dss_service_username }}"
    mode: 0711

- name: "[Prerequisites] - Create private directories"
  become: true
  ansible.builtin.file:
    path: "{{ dss_data_dir }}"
    state: directory
    owner: "{{ dss_service_username }}"
    mode: 0711
